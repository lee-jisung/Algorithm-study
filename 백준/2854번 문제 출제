#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <queue>
#include <vector>
#include <deque>
#include <cmath>
#include <map>

#define SIZE 100001
#define INF 987654321

using namespace std;

/*
   dp[i][0] => i번 까지 출제 했을 때, a[i]에서 출제하는 경우의 수
   dp[i][1] => i번 까지 출제 했을 떄, b[i]에서 출제하는 경우의 수

   dp[i][0] = dp[i-1][0] * (a[i]+b[i-1]) + dp[i-1][1] * (a[i]+b[i-1]-1);
   dp[i][1] = (dp[i-1][0] + dp[i-1][1]) * b[i];

*/

const int divide = (int)(1e9 + 7);
int n;
long long dp[SIZE][2], a[SIZE], b[SIZE];

int main(void) {

	ios_base::sync_with_stdio(0);
	cin.tie(0);

    cin >> n;
    for (int i = 1; i <=n; i++)
        cin >> a[i];
    for (int i = 1; i < n; i++)
        cin >> b[i];

    dp[0][0] = 1;

    for (int i = 1; i <= n; i++) {
        dp[i][0] = (dp[i-1][0] * (a[i] + b[i-1]) + dp[i-1][1] * (a[i] + b[i-1] -1)) % divide;
        dp[i][1] = ((dp[i - 1][0] + dp[i - 1][1]) * b[i]) % divide;
    }
    
    cout << dp[n][0] << "\n";

	return 0;
}
